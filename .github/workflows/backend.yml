name: Deploy Backend (nohup)

on:
  push:
    branches: [ "main" ]
    paths:
      - "backend/**"
      - ".github/workflows/backend.yml"
  workflow_dispatch: {}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build with Gradle
        working-directory: backend
        run: |
          chmod +x gradlew || true
          ./gradlew clean build -x test

      - name: Find artifact JAR
        id: jar
        working-directory: backend
        run: |
          set -e
          FILE=$(ls build/libs/*-SNAPSHOT.jar | grep -v plain || ls build/libs/*-SNAPSHOT.jar | head -n1)
          echo "file=$FILE" >> $GITHUB_OUTPUT
          echo "Found: $FILE"

      - name: Upload JAR to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          source: "${{ steps.jar.outputs.file }}"
          target: "${{ secrets.BACKEND_REMOTE_DIR }}/build/libs/"
          timeout: 60s

      - name: Restart backend with nohup
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          timeout: 1m
          command_timeout: 15m
          script: |
            set -e
            cd "${{ secrets.BACKEND_REMOTE_DIR }}"

            pkill -f "java .*build/libs/app\.jar" || true
            sleep 1

            LATEST=$(ls -1t build/libs/*.jar 2>/dev/null | grep -v plain | head -n1 || ls -1t build/libs/*.jar | head -n1)
            if [ -z "$LATEST" ]; then
              echo "No JAR found in build/libs"; exit 1
            fi
            echo "Using JAR: $LATEST"
            ln -sfn "$LATEST" build/libs/app.jar

            nohup java -Dserver.address=127.0.0.1 -Dserver.port=8081 \
              -jar build/libs/app.jar \
              --spring.config.additional-location=file:${{ secrets.BACKEND_REMOTE_DIR }}/.env.properties \
              > ~/app.log 2>&1 &

            sleep 2
            if pgrep -f "java .*build/libs/app\.jar" > /dev/null; then
              echo "Backend started"
            else
              echo "Start failed"; tail -n 200 ~/app.log || true; exit 1
            fi

            ss -lntp | grep 8081 || (echo "Port 8081 not listening yet"; tail -n 200 ~/app.log || true; exit 1)
