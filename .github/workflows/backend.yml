name: Deploy Backend (minimal & port-safe)

on:
  push:
    branches: [ "main" ]
    paths:
      - "suriname-backend/**"
      - ".github/workflows/backend.yml"
  workflow_dispatch: {}

concurrency:
  group: deploy-backend-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "21"
          cache: gradle

      - name: Build (subdir)
        working-directory: ${{ secrets.BACKEND_DIR }}
        run: |
          chmod +x gradlew || true
          ./gradlew clean build -x test

      - name: Pick latest JAR
        id: jar
        working-directory: ${{ secrets.BACKEND_DIR }}
        run: |
          JAR=$(ls -1t build/libs/*.jar 2>/dev/null | grep -v plain | head -n1 || ls -1t build/libs/*.jar | head -n1)
          test -n "$JAR"
          echo "file=$GITHUB_WORKSPACE/${{ secrets.BACKEND_DIR }}/$JAR" >> $GITHUB_OUTPUT
          echo "Found: $JAR"

      - name: Upload JAR to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          source: "${{ steps.jar.outputs.file }}"
          target: "${{ secrets.BACKEND_REMOTE_DIR }}/build/libs/"
          timeout: 60s

      - name: Start backend (kill 8081 & run latest)
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: 'cd "${{ secrets.BACKEND_REMOTE_DIR }}" && mkdir -p build/libs && (command -v fuser >/dev/null && fuser -k 8081/tcp || true) && pkill -f "java .*build/libs" || true && LATEST=$(ls -1t build/libs/*.jar 2>/dev/null | head -n1) && nohup java -Dserver.address=127.0.0.1 -Dserver.port=8081 -jar "$LATEST" --spring.config.additional-location="file:${{ secrets.BACKEND_REMOTE_DIR }}/.env.properties" > ~/app.log 2>&1 &'
