name: Deploy Backend (nohup)

on:
  push:
    branches: [ "main" ]
    paths:
      - "suriname-backend/**"
      - ".github/workflows/backend.yml"
  workflow_dispatch: {}

concurrency:
  group: deploy-backend-${{ github.ref }}
  cancel-in-progress: true

env:
  BACKEND_DIR: ${{ secrets.BACKEND_DIR }}

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "21"
          cache: gradle

      - name: Build (in subdir)
        working-directory: ${{ env.BACKEND_DIR }}
        run: |
          set -e
          chmod +x gradlew || true
          ./gradlew clean build -x test

      - name: Find built JAR (auto-pick latest)
        id: jar
        working-directory: ${{ env.BACKEND_DIR }}
        run: |
          set -e
          JAR=$(ls -1t build/libs/*.jar 2>/dev/null | grep -v plain | head -n1 || ls -1t build/libs/*.jar | head -n1)
          test -n "$JAR"
          echo "file=$GITHUB_WORKSPACE/${{ env.BACKEND_DIR }}/$JAR" >> $GITHUB_OUTPUT
          echo "Found: $JAR"

      - name: Upload JAR to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          source: "${{ steps.jar.outputs.file }}"
          target: "${{ secrets.BACKEND_REMOTE_DIR }}/build/libs/"
          timeout: 60s

      - name: Restart backend (nohup + verify)
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          timeout: 60s
          command_timeout: 10m
          script: |
            set -euo pipefail
            cd "${{ secrets.BACKEND_REMOTE_DIR }}"

            echo "[1] Stop old process"
            pkill -f "java .*build/libs/app\.jar" || true
            pkill -f "java .*build/libs" || true
            sleep 1

            echo "[2] Link latest jar"
            LATEST=$(ls -1t build/libs/*.jar 2>/dev/null | grep -v plain | head -n1 || ls -1t build/libs/*.jar | head -n1)
            test -n "$LATEST"
            ln -sfn "$LATEST" build/libs/app.jar
            echo "Using JAR: $LATEST"

            echo "[3] Check env file"
            test -f ".env.properties"

            echo "[4] Start backend"
            nohup java -Dserver.address=127.0.0.1 -Dserver.port=8081 \
              -jar build/libs/app.jar \
              --spring.config.additional-location="file:${PWD}/.env.properties" \
              > ~/app.log 2>&1 &

            echo "[5] Verify process"
            sleep 3
            if pgrep -f "java .*build/libs/app\.jar" >/dev/null; then
              echo "Backend started"
            else
              echo "Start failed"
              tail -n 200 ~/app.log || true
              exit 1
            fi

            echo "[6] Port check"
            (command -v ss >/dev/null && ss -lntp | grep 8081) || \
            (command -v netstat >/dev/null && netstat -lntp | grep 8081) || true

            echo "[7] Recent logs"
            tail -n 80 ~/app.log || true
