name: Deploy Backend (nohup same as manual)

on:
  push:
    branches: [ "main" ]
    paths:
      - "suriname-backend/**"
      - ".github/workflows/backend.yml"
  workflow_dispatch: {}

env:
  BACKEND_DIR: ${{ secrets.BACKEND_DIR }}
  REMOTE_DIR:  ${{ secrets.BACKEND_REMOTE_DIR }}
  JAR_NAME:    suriname-backend-0.0.1-SNAPSHOT.jar

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "21"
          cache: gradle

      - name: Build in subdir
        working-directory: ${{ env.BACKEND_DIR }}
        run: |
          set -e
          chmod +x gradlew || true
          ./gradlew clean build -x test
          test -f "build/libs/${{ env.JAR_NAME }}" || { echo "JAR not found"; ls -l build/libs; exit 1; }

      - name: Upload JAR to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          source: "${{ env.BACKEND_DIR }}/build/libs/${{ env.JAR_NAME }}"
          target: "${{ env.REMOTE_DIR }}/build/libs/"
          timeout: 60s

      - name: Run nohup command on EC2
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          timeout: 1m
          command_timeout: 10m
          script: |
            set -euo pipefail
            cd "${{ env.REMOTE_DIR }}"

            echo "[1] Stop old process"
            pkill -f "java .*${{ env.JAR_NAME }}" || true
            pkill -f "java .*build/libs" || true

            echo "[2] Start backend (same as manual)"
            nohup java -Dserver.address=127.0.0.1 -Dserver.port=8081 \
              -jar build/libs/${{ env.JAR_NAME }} \
              --spring.config.additional-location="file:${PWD}/.env.properties" \
              > ~/app.log 2>&1 &

            sleep 3
            pgrep -f "java .*${{ env.JAR_NAME }}" >/dev/null && echo "Backend started ✅" || (echo "Start failed ❌"; tail -n 200 ~/app.log || true; exit 1)
