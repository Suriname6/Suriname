name: Frontend Deploy

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    concurrency:
      group: fe-cd-prod
      cancel-in-progress: true

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: suriname-frontend/package-lock.json

      # 1. Build & Package
      - name: Build (env 주입 + 패키징)
        working-directory: suriname-frontend
        env:
          VITE_API_URL: "/api"
          VITE_ALGOLIA_APP_ID: "5YCEBAVIOS"
          VITE_ALGOLIA_SEARCH_API_KEY: "98bc7573d3d136029642f704d1fa2e48"
        run: |
          set -euo pipefail
          npm ci || (rm -rf node_modules package-lock.json && npm install)
          npm i -D @rollup/rollup-linux-x64-gnu || true
          npm run build
          test -f dist/index.html
          test -d dist/assets
          tar -czf ../dist.tgz -C dist .

      # 2. dist.tgz 확인
      - name: Debug dist.tgz path
        run: |
          echo "=== dist.tgz 위치 확인 ==="
          ls -lh --time-style=long-iso dist.tgz
          tar -tzf dist.tgz | head -n 20

      # 3. dist.tgz 업로드 (EC2 /tmp)
      - name: Upload dist.tgz to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          source: "dist.tgz"
          target: "/tmp/"
          overwrite: true

      # 4. 서버에서 압축 해제 & Nginx reload
      - name: Deploy to Nginx
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            set -euo pipefail
            ROOT_DIR=${{ secrets.FRONTEND_DIR }}
            TMP_DIR="/tmp/suriname-dist"

            echo "=== dist.tgz 업로드 확인 ==="
            ls -lh --time-style=long-iso /tmp/dist.tgz

            echo "=== 기존 임시폴더 제거 ==="
            sudo rm -rf "$TMP_DIR"
            sudo mkdir -p "$TMP_DIR"

            echo "=== dist.tgz 압축 해제 ==="
            sudo tar -xzf /tmp/dist.tgz -C "$TMP_DIR"

            echo "=== Nginx 루트로 배포 ==="
            sudo mkdir -p "$ROOT_DIR"
            sudo rsync -a --delete "$TMP_DIR"/ "$ROOT_DIR"/
            sudo chown -R www-data:www-data "$ROOT_DIR"

            echo "=== Nginx Reload ==="
            sudo nginx -t
            sudo systemctl reload nginx
